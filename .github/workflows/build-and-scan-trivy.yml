name: Build Scan Push w Trivy

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-scan:
    runs-on: ubuntu-latest
    timeout-minutes: 10  # add timeout

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build Docker image ${{ matrix.name }}
        run: |
          if [ "${{ matrix.name }}" == "mysql" ]; then
            docker build --build-arg MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }} -t ${{ matrix.tag }} ${{ matrix.path }}
          else
            docker build -t ${{ matrix.tag }} ${{ matrix.path }}
          fi

      - name: Install Trivy scanner
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sudo sh -s -- -b /usr/local/bin

      - name: Run Trivy scan - ${{ matrix.name }}
        id: trivy_scan
        continue-on-error: true
        run: |
          trivy image \
            --format table \
            --output trivy-report-${{ matrix.name }}.txt \
            --exit-code 1 \
            --ignore-unfixed \
            --vuln-type os,library \
            ${{ matrix.tag }}

      - name: Upload Trivy report - ${{ matrix.name }}
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report-${{ matrix.name }}
          path: trivy-report-${{ matrix.name }}.txt

      - name: Warn if vulnerabilities found - ${{ matrix.name }}
        if: steps.trivy_scan.outcome == 'failure'
        run: echo "⚠️ Vulnerabilities found in image ${{ matrix.name }} - check the Trivy report artifact."

      - name: Push Docker image ${{ matrix.name }}
        run: docker push ${{ matrix.tag }}
