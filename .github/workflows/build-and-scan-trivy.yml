name: Build and Scan Docker Images with Trivy

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-scan:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: php-app
            context: ./php-app
            tag: cnas-php-app
          - name: nginx
            context: ./nginx
            tag: cnas-nginx-proxy
          - name: mysql
            context: ./mysql
            tag: cnas-mysql-db

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image - ${{ matrix.name }}
        run: docker build -t ${{ matrix.tag }}:local ${{ matrix.context }}

      - name: Install Trivy scanner
        run: |
          sudo apt-get update
          sudo apt-get install -y wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install -y trivy

      - name: Run Trivy vulnerability scan - ${{ matrix.name }}
        id: trivy_scan
        continue-on-error: true
        run: |
          trivy image \
            --format table \
            --output trivy-report-${{ matrix.name }}.txt \
            --exit-code 1 \
            --ignore-unfixed \
            --vuln-type os,library \
            ${{ matrix.tag }}:local

      - name: Upload Trivy report artifact - ${{ matrix.name }}
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report-${{ matrix.name }}
          path: trivy-report-${{ matrix.name }}.txt

      - name: Fail if vulnerabilities found - ${{ matrix.name }}
        if: steps.trivy_scan.outcome == 'failure'
        run: |
          echo "Trivy scan detected vulnerabilities in ${{ matrix.name }} image."
          exit 1
